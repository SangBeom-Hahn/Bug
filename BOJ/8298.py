'''
n개의 로봇이 각각 주어진 시간 내에 작업을 끝낼 수 있는지 판단하라. 
작업은 크기가 있고 크기가 같은 작업은 이어붙일 수 있고 작업 시간은 작업 크기의 거듭제곱 형태로 늘어난다.
작 작업 크기가 s이고 x개 붙이면 s^x 시간이다. 0개 이어붙이면 ^0으로 1만큼 시간이 걸린다.

로봇은 이어 붙인 작업을 여러번 반복한다. 반복 작업 형태 : 반복 횟수 K와 이어붙인 작업의 개수 t가 반복된 문자열로 표현한다.
ex) 횟수 3, 붙인 작업 개수 4 = 3tttt
이때 작업 총 시간은 횟수 * 붙인 작업 1번하는 시간이다. 3 * 작업 ^ 4

정리 : 작업크기s, 붙인 개수x = s^x 만큼 시간이 걸림
반복 횟수 k, 붙인 개수t = ktttt로 표현하고 k * s^4만큼 걸림

s   주어진 시간 tasks   작업시간
10  300         3tt     3 * s^ 2 = 3 * 10 ^2라서 300시간 안에 가능하다.

1. 모경수(prt, n=1)
1) sizes의 인덱스를 돌면서
2) tasks의 인덱스 0 요소 * sizes ** len(tasks의 인덱스 1 요소 부터 다) <= limits 면 1 아니면 0

* sizes
limits
tasks
출 : 각 로봇들이 주어진 시간 내에 주어진 작업을 끝낼 수 있으면 1, 없으면 0을 로봇번호가 빠른 순서대로 1차원 배열에 담아 반환
2. 시복 n^2
'''

sizes = [10, 2, 13, 1]
limits = [300, 31, 100, 5]
tasks = ['3tt', '4ttt', '8t', '4tttt']
res = []

for i in range(len(sizes)):
    soyo = int(tasks[i][0]) * (sizes[i] ** len(tasks[i][1:]))
    
    if(soyo <= limits[i]):
        res.append(1)
    else:
        res.append(0)
        
print(res)        