'''
깊이 K인 완전 이진 트리
k   노드
1   1
2   3
3   7

빌딩에 들어간 순서가 있다.
빌딩은 선위순회로 움직인다.

ex) 2 - 1 - 3
1 - 6 - 4 - 3 - 5 - 2 - 7

idx 0 1 2 3 4 5 6
답  3 6 2 1 4 5 7

층위 순회 넣는 값mid    idx
3                       0
6                       1 = 2배 + 1
1                       3 = 부모이 2배 + 1
4                       4 = 부모 2배 + 2

2                       2 = 2배 + 2
5                       5
7                       6

1. 모경수(prt, n=1)
1) 층위 순회로 만듦
    2] 최초 인덱스 0
    3] 인자 (부모 인덱스, arr)
    4] 재귀
        3] mid를 구함
        4] mid 값을 층위 순회에 넣음
        5] 왼(부모 인덱스 * 2 + 1, 왼쪽 배열 ), 오른 재귀(부모 인덱스 * 2 + 2, 오른 배열)
        6] 길이 1이면 스탑
    
2) 출
    1] idx 0부터 1, 2, 4, 8개 씩 출력하고 result 길이만큼 출력하면 끝

* k : 깊이
빌딩 방문 순서
출 : i번째 레벨에 빌딩 번호 = 층위 순회 = 3 6 2 1 4 5 7
1 - 3  1개
2 - 6 2   2개
3 - 1 4 5 7  4개 
4 -             8개

8
4               12
2       6       10      14
1   3   5   7   9   11  13  15

2. n^3
'''

    # 2] 최초 인덱스 0
    # 3] 인자 (부모 인덱스, arr)
    # 4] 재귀
    #     3] mid를 구함
    #     4] mid 값을 층위 순회에 넣음
    #     5] 왼(부모 인덱스 * 2 + 1, 왼쪽 배열 ), 오른 재귀(부모 인덱스 * 2 + 2, 오른 배열)
    #     6] 길이 1이면 스탑
    
# 층위 순회 넣는 값mid    idx
# 3                       0
# 6                       1 = 2배 + 1
# 1                       3 = 부모이 2배 + 1
# 4                       4 = 부모 2배 + 2

# 2                       2 = 2배 + 2
# 5                       5
# 7                       6
    
def div(idx, arr)    :
    if(len(arr) == 1):
        result[idx] = arr[0]
        return
    
    mid = len(arr) // 2
    result[idx] = arr[mid] # 미드값을 층위 순회에 넣음
    
    # 왼
    div(idx * 2 + 1, arr[:mid])
    div(idx * 2 + 2, arr[mid+1:])
    

k = int(input())
visit = list(map(int, input().split()))
result = [0] * len(visit)

div(0, visit)

idx = 0
print_cnt = 1

for ele in result:
    print(ele, end = ' ')
    idx += 1
    
    if(idx == print_cnt):
        idx = 0
        print_cnt *= 2
        print()

